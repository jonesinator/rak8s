---
# tasks file for common
- name: Make a cmdline.txt copy where each parameter is on its own line.
  shell: >-
    tr ' ' '\n' < /boot/cmdline.txt > /tmp/cmdline.txt

- name: Add line for cgroup_enable=cpuset to cmdline.txt.
  lineinfile:
    path: /tmp/cmdline.txt
    line: "{{ item }}"
  with_items:
    - cgroup_enable=cpuset
    - cgroup_memory=1
  register: cmdline

- name: Copy the file back.
  shell: >-
    tr '\n' ' ' < /tmp/cmdline.txt > /boot/cmdline.txt
  when: cmdline|changed

- name: Remove the temporary cmdline.txt.
  file:
    path: /tmp/cmdline.txt
    state: absent

- name: Load the br_netfilter kernel module.
  modprobe:
    name: br_netfilter
    state: present

- name: Set the br_netfilter kernel module to load on boot.
  lineinfile:
    dest: /etc/modules
    line: br_netfilter

- name: Pass bridged IPv4 traffic to iptables' chains
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    state: present

- name: apt-get update
  apt:
    update_cache=yes
    autoclean=yes
    autoremove=yes
    cache_valid_time=86400

- name: apt-get upgrade
  apt:
    upgrade=full

- name: Reboot
  shell: sleep 2 && shutdown -r now "Ansible Reboot for /boot/cmdline.txt Change"
  async: 1
  poll: 0
  ignore_errors: True
  when: cmdline|changed
  tags:
    - boot
    - shutdown

- name: Wait for Reboot
  local_action: wait_for
  args:
    host: "{{ inventory_hostname }}"
    port: 22
    delay: 15
    timeout: 90
  become: False
  when: cmdline|changed
  tags:
    - boot
    - shutdown